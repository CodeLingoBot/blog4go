{"name":"Blog4go","tagline":"Partial Logger","body":"Introduction\r\n=======\r\n\r\nBLog4go is authorized by [YOUMI](https://www.youmi.net/). It is an efficient logging library written in the [Go](http://golang.org/) programming language, providing logging hook, log rotate, filtering and formatting log message. \r\n\r\n[![Build Status](https://travis-ci.org/YoungPioneers/blog4go.svg?branch=master)](https://travis-ci.org/YoungPioneers/blog4go)\r\n[![Coverage Status](https://coveralls.io/repos/github/YoungPioneers/blog4go/badge.svg?branch=master)](https://coveralls.io/github/YoungPioneers/blog4go?branch=master)\r\n\r\n\r\nFeatures\r\n------------------\r\n* *Partially write* to the [bufio.Writer](https://golang.org/pkg/bufio/#Writer) as soon as posible while formatting message to improve performance\r\n* Support different logging output file for different logging level\r\n* Support configure with files in xml format\r\n* Configurable logrotate strategy\r\n* Call user defined hook in asynchronous mode for every logging action\r\n* Adjustable message formatting\r\n* Configurable logging behavier when looging *on the fly* without restarting\r\n* Suit configuration to the environment when logging start\r\n* Try best to get every done in background\r\n* File writer can be configured according to given config file\r\n* Different output writers\r\n\t* Console writer\r\n\t* File writer\r\n\t* Socket writer\r\n\r\n\r\nQuick-start\r\n------------------\r\n\r\n```\r\npackage main\r\n\r\nimport (\r\n\tlog \"github.com/YoungPioneers/blog4go\"\r\n\t\"fmt\"\r\n\t\"os\"\r\n)\r\n\r\n// optionally set user defined hook for logging\r\ntype MyHook struct {\r\n\tsomething string\r\n}\r\n\r\n// when log-level exceed level, call the hook\r\n// level is the level associate with that logging action.\r\n// message is the formatted string already written.\r\nfunc (self *MyHook) Fire(level log.Level, message string) {\r\n\tfmt.Println(message)\r\n}\r\n\r\nfunc main() {\r\n\t// init a file write using xml config file\r\n\terr := log.NewFileWriterFromConfigAsFile(\"config.xml\")\r\n\tif nil != err {\r\n\t\tfmt.Println(err.Error())\r\n\t\tos.Exit(1)\r\n\t}\r\n\tdefer log.Close()\r\n\r\n\t// initialize your hook instance\r\n\thook := new(MyHook)\r\n\tlog.SetHook(hook) // writersFromConfig can be replaced with writers\r\n\tlog.SetHookLevel(log.INFO)\r\n\r\n\t// optionally set output colored\r\n\tlog.SetColored(true)\r\n\r\n\tlog.Debugf(\"Good morning, %s\", \"eddie\")\r\n\tlog.Warn(\"It's time to have breakfast\")\r\n\r\n}\r\n```\r\n\r\nconfig.xml\r\n```xml\r\n<blog4go minlevel=\"info\">\r\n\t<filter levels=\"trace\">\r\n\t\t<rotatefile path=\"trace.log\" type=\"time\"></rotatefile>\r\n\t</filter>\r\n\t<filter levels=\"debug,info\" colored=\"true\">\r\n\t\t<file path=\"debug.log\"></file>\r\n\t</filter>\r\n\t<filter levels=\"error,critical\">\r\n\t\t<rotatefile path=\"error.log\" type=\"size\" rotateSize=\"50000000\" rotateLines=\"8000000\"></rotatefile>\r\n\t</filter>\r\n</blog4go>\r\n```\r\n\r\nInstallation\r\n------------------\r\n\r\nIf you don't have the Go development environment installed, visit the \r\n[Getting Started](http://golang.org/doc/install.html) document and follow the instructions. Once you're ready, execute the following command:\r\n\r\n```\r\ngo get -u github.com/YoungPioneers/blog4go\r\n```\r\n\r\nBenchmark\r\n------------------\r\n\r\nI do some benchmark on a HDD disk comparing amoung fmt,blog4go,seelog,logrus. [Benchmark Code](https://github.com/YoungPioneers/blog4go/tree/master/benchmark)\r\n\r\n```\r\nBenchmarkBlog4goSingleGoroutine-4               \t 1000000\t      1087 ns/op\r\nBenchmarkBlog4goMultiGoroutine-4                \t   30000\t     56569 ns/op\r\nBenchmarkFmtFormatSingleGoroutine-4             \t  300000\t      5104 ns/op\r\nBenchmarkFmtFormatWithTimecacheSingleGoroutine-4\t  300000\t      4256 ns/op\r\nBenchmarkFmtFormatWithTimecacheMultiGoroutine-4 \t    3000\t    509579 ns/op\r\nBenchmarkLogrusSingleGoroutine-4                \t  100000\t     13757 ns/op\r\nBenchmarkLogrusWithTimecacheSingleGoroutine-4   \t  100000\t     12752 ns/op\r\nBenchmarkLogrusWithTimecacheMultiGoroutine-4    \t    1000\t   2049809 ns/op\r\nBenchmarkSeelogSingleGoroutine-4                \t   50000\t     32846 ns/op\r\nBenchmarkSeelogMultiGoroutine-4                 \t    1000\t   3191334 ns/op\r\n```\r\n\r\nIt shows that blog4go can write log very fast, especially in situation with multi goroutines running at the same time~\r\n\r\n\r\nDocumentation\r\n------------------\r\n\r\nTODO\r\n\r\n\r\nExamples\r\n---------------\r\n\r\nFull examples please view [EXAMPLES](https://github.com/YoungPioneers/blog4go/tree/master/examples)\r\n\r\n\r\nChangelog\r\n------------------\r\n\r\n[CHANGELOG](https://raw.githubusercontent.com/YoungPioneers/blog4go/master/CHANGELOG)\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}